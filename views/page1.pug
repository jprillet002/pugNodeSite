extends layout

block content
    script(src="https://d3js.org/d3.v5.js")
    br
    .card.mb-3
        .card-header
            i(class= icon)
            |   #{title}
        .card-body
            svg
    script(type='text/javascript').
        var data = [
                    [ 5,     20 ],
                    [ 480,   90 ],
                    [ 250,   50 ],
                    [ 100,   33 ],
                    [ 330,   95 ],
                    [ 410,   12 ],
                    [ 475,   44 ],
                    [ 25,    67 ],
                    [ 85,    21 ],
                    [ 220,   88 ],
                    [ 600,  150 ] ];
        ////// BUILDING SCATTERPLOT //////

        // Establish dimensions of svg container.
        var padding = 60;
        var svgWidth = 1000, svgHeight = 500;
        // Create svg and provide dimension attributes.
        var svg = d3.select('svg')
            .attr("width", svgWidth)
            .attr("height", svgHeight);
    
        // Scales
        var xScale = d3.scaleLinear()
                        .domain([0, d3.max(data, function(d) { return d[0]; })])    // Returns maximum X value for scale. Try min() for dynamism?
                        .range([padding, svgWidth - padding]);                      // Padding ensures extra space for labels later.
        var yScale = d3.scaleLinear()
                        .domain([0, d3.max(data, function(d) { return d[1]; })])
                        .range([svgHeight - padding, padding]);
    
        // Build axes
        var xAxis = d3.axisBottom().scale(xScale);   // Builds scaled X axis and orients on bottom of the svg.
        var yAxis = d3.axisLeft().scale(yScale);     // Builds scaled Y axis and orients on left of the svg.
   
        // Build scatterplot.
        svg.selectAll("circle")     // Returns empty selection; no circle elements in svg.
            .data(data)             // Pulls data from dataset, puts it into a "waiting state."
            .enter()                // Takes data from waiting state to perform further operations on each item in dataset.
                                    // For each data item:    
                .append("circle")           // Append a circle to the svg container.
                .attr("cx", function(d){    // Add the circle's scaled X coordinate.
                    return xScale(d[0]);
                })
                .attr("cy", function(d){    // Add the circle's Y coordinate.
                    return yScale(d[1]);
                })
                .attr("r", 5);              // Give circle a radius of 5.
    
        // Add labels to circles.
        svg.selectAll("text")       // Returns empty selection; no text elements in svg.
            .data(data)             // Pulls data from dataset, puts it into a "waiting state."
            .enter()                // Takes data from waiting state to perform further operations on each item in dataset.
                                    // For each data item:
                .append("text")                             // Append text element to svg.
                .text(function(d){                          // Add the ordered pair coordinates (not scaled!).
                    return "(" + d[0] + ", " + d[1] + ")";  
                })
                .attr("x", function(d) {                    // Add x position mapping (scaled to match circle position).
                    return xScale(d[0]) + 5;                // + 5 ensures label is not overlapping the circle for legibility.
                })
                .attr("y", function(d){                     // Add y position mapping (scaled to match circle position).
                    return yScale(d[1]) - 5;                // - 5 ensures label is not overlapping the circle for legibility.
                })
                .attr("font-family", "sans-serif")          // Add styling.
                .attr("font-size", "11px")
                .attr("fill", "red");

        // Append axes onto the svg.
        svg.append("g")
            .attr("class", "axis")                                              // Gives "g" element the "axis" class for formatting purposes.
            .attr("transform", "translate(0," + (svgHeight - padding) + ")")    // Shifts the axis down to the bottom of the svg.
            .call(xAxis);                                                       // Appends X axis as "g" element to svg.

        svg.append("g")
            .attr("class", "axis")
            .attr("transform", "translate(" + padding + ", 0)")
            .call(yAxis);

